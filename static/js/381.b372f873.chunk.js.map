{"version":3,"file":"static/js/381.b372f873.chunk.js","mappings":"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","sources":["components/Contacts/Contacts.styled.jsx","components/ContactItem/ContactItem.styled.jsx","components/ContactItem/ContactItem.jsx","components/Contacts/Contacts.jsx","components/Filter/Filter.styled.jsx","components/Filter/Filter.jsx","Pages/Phonebook/Phonebook.styled.jsx","Pages/Phonebook/Phonebook.jsx"],"sourcesContent":["import styled from 'styled-components';\n\nexport const List = styled.ul`\n  list-style: none;\n  margin: 30px auto 60px auto;\n  padding: 0;\n  width: 600px;\n`;\nexport const Message = styled.p`\n  margin: 30px auto 0 auto;\n  padding: 20px;\n  width: 560px;\n  border-radius: 12px;\n  background-color: #9f94ab7f;\n  box-shadow: 9px -1px 8px 1px rgba(0, 0, 0, 0.76);\n  font-size: 20px;\n  font-weight: 500;\n  text-align: center;\n`;\nexport const Notification = styled.div`\n  width: 300px;\n  margin: 30px auto;\n  text-align: center;\n  font-size: 20px;\n  font-weight: 500;\n`;\n","import styled from 'styled-components';\nimport { BiSolidTrash } from 'react-icons/bi';\n\nexport const ListItem = styled.li`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  padding: 20px;\n  width: 560px;\n  height: 70px;\n  border-radius: 12px;\n  background-color: #9f94ab7f;\n  box-shadow: 9px -1px 8px 1px rgba(0, 0, 0, 0.76);\n  &:not(:last-child) {\n    margin-bottom: 40px;\n  }\n`;\nexport const Name = styled.span`\n  font-size: 30px;\n  font-weight: 500;\n`;\nexport const Number = styled.span`\n  font-size: 28px;\n  font-weight: 500;\n  font-style: italic;\n`;\nexport const Button = styled.button`\n  display: block;\n  height: 48px;\n  width: 48px;\n  border-radius: 50%;\n  border: none;\n  outline: none;\n  cursor: pointer;\n  background-color: rgba(30, 0, 255, 0.496);\n  transition: box-shadow 250ms ease-in;\n  &:hover,\n  &:focus {\n    box-shadow: 3px 1px 32px 0px rgba(28, 18, 227, 1);\n  }\n`;\nexport const TrashIcon = styled(BiSolidTrash)`\n  height: 24px;\n  width: 24px;\n  fill: #000000ae;\n  pointer-events: none;\n`;\n","import PropTypes from 'prop-types';\nimport { deleteContact } from 'redux/operations';\nimport {\n  ListItem,\n  Name,\n  Number,\n  Button,\n  TrashIcon,\n} from './ContactItem.styled';\nimport { useDispatch } from 'react-redux';\n\nexport function ContactItem({ contact: { id, name, number } }) {\n  const dispatch = useDispatch();\n\n  return (\n    <ListItem>\n      <p>\n        <Name>{name}:&nbsp;</Name>\n        <Number>{number}</Number>\n      </p>\n      <Button type=\"button\" onClick={() => dispatch(deleteContact(id))}>\n        <TrashIcon />\n      </Button>\n    </ListItem>\n  );\n}\nContactItem.propTypes = {\n  contact: PropTypes.shape({\n    id: PropTypes.string.isRequired,\n    name: PropTypes.string.isRequired,\n    number: PropTypes.string.isRequired,\n  }).isRequired,\n};\n","import { useDispatch, useSelector } from 'react-redux';\n\nimport { List, Message, Notification } from './Contacts.styled';\nimport { selectContacts, selectFilter } from 'redux/selector';\nimport { ContactItem } from 'components/ContactItem/ContactItem';\nimport { selectError, selectIsLoading } from 'redux/selector';\nimport { fetchAll } from 'redux/operations';\nimport { useEffect } from 'react';\n\nexport function Contacts() {\n  const contacts = useSelector(selectContacts);\n  const filter = useSelector(selectFilter);\n  const isLoading = useSelector(selectIsLoading);\n  const error = useSelector(selectError);\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(fetchAll());\n  }, [dispatch]);\n\n  const visibleContacts = () => {\n    return contacts?.filter(contact =>\n      contact.name.toLowerCase().includes((filter || '').toLowerCase())\n    );\n  };\n\n  return (\n    <>\n      {isLoading && !error && <Notification>Loading...</Notification>}\n      {error && !isLoading && (\n        <Notification>\n          Sorry, there was an error. Try again later...\n        </Notification>\n      )}\n      {visibleContacts().length === 0 &&\n        contacts.length === 0 &&\n        !isLoading && <Message>No contacts available.</Message>}\n      {visibleContacts().length === 0 && contacts.length !== 0 && (\n        <Message>Contact not found</Message>\n      )}\n\n      {visibleContacts().length !== 0 && (\n        <List>\n          {visibleContacts().map(contact => {\n            return <ContactItem key={contact.id} contact={contact} />;\n          })}\n        </List>\n      )}\n    </>\n  );\n}\n","import styled from 'styled-components';\nimport { BiSearchAlt } from 'react-icons/bi';\n\nexport const Label = styled.label`\n  position: relative;\n  display: block;\n  margin-left: auto;\n  margin-right: auto;\n  width: 600px;\n  font-size: 20px;\n  font-weight: 500;\n`;\nexport const Input = styled.input`\n  display: block;\n  width: 300px;\n  padding: 10px 10px 10px 50px;\n  font-size: 20px;\n  border-radius: 12px;\n  outline: none;\n  border-color: #0000ffe0;\n  margin-top: 16px;\n\n  &:focus {\n    box-shadow: 3px 1px 32px 0px rgba(28, 18, 227, 1);\n  }\n  &::placeholder {\n    margin-left: 50px;\n  }\n`;\nexport const SearchIIcon = styled(BiSearchAlt)`\n  position: absolute;\n  left: 25px;\n  top: 75%;\n  transform: translateY(-50%);\n  fill: grey;\n`;\n","import { Label, Input, SearchIIcon } from './Filter.styled';\nimport { useDispatch } from 'react-redux';\nimport { changeFilter } from 'redux/filterSlice';\n\nexport function Filter() {\n  const dispatch = useDispatch();\n\n  \n  return (\n    <Label>\n      Find contacts by name:\n      <Input\n        type=\"text\"\n        onChange={e => dispatch(changeFilter(e.target.value))}\n        placeholder=\"Search contact\"\n      />\n      <SearchIIcon />\n    </Label>\n  );\n}\n","import styled from 'styled-components';\n\nexport const MainTitle = styled.h1`\n  text-align: center;\n  text-transform: uppercase;\n  text-decoration: underline;\n  margin-top: 40px;\n\n  font-weight: 700;\n  text-shadow: 0px 1px 0 rgb(8, 57, 61), 0px 2px 0 rgb(6, 45, 49),\n    0px 3px 0 rgb(5, 34, 37), 0px 4px 0 rgb(3, 23, 24), 0px 5px 0 rgb(2, 11, 12),\n    0px 6px 1px rgba(0, 0, 0, 1);\n  -webkit-text-shadow: 0px 1px 0 rgb(8, 57, 61), 0px 2px 0 rgb(6, 45, 49),\n    0px 3px 0 rgb(5, 34, 37), 0px 4px 0 rgb(3, 23, 24), 0px 5px 0 rgb(2, 11, 12),\n    0px 6px 1px rgba(0, 0, 0, 1);\n  -moz-text-shadow: 0px 1px 0 rgb(8, 57, 61), 0px 2px 0 rgb(6, 45, 49),\n    0px 3px 0 rgb(5, 34, 37), 0px 4px 0 rgb(3, 23, 24), 0px 5px 0 rgb(2, 11, 12),\n    0px 6px 1px rgba(0, 0, 0, 1);\n  color: #094449;\n  font-size: 50px;\n  font-family: 'Times New Roman', Times, serif;\n`;\nexport const Title = styled.h2`\n  text-align: center;\n  margin-top: 40px;\n  font-size: 40px;\n  color: rgba(0, 0, 0, 0.736);\n`;\n","// import { FormContact } from './component/FormContact/FormContact';\nimport { FormContact } from 'components/FormContact/FormContact';\nimport { Contacts } from 'components/Contacts/Contacts';\nimport { Filter } from 'components/Filter/Filter';\n\nimport { MainTitle, Title } from './Phonebook.styled';\nconst Phonebook = () => {\n  return (\n    <div>\n      <MainTitle>Phonebook</MainTitle>\n      <FormContact />\n      <Title>Contacts</Title>\n      <Filter />\n      <Contacts />\n    </div>\n  );\n};\nexport default Phonebook;\n"],"names":["List","styled","_templateObject","_taggedTemplateLiteral","Message","_templateObject2","Notification","_templateObject3","ListItem","Name","Number","Button","_templateObject4","TrashIcon","BiSolidTrash","_templateObject5","ContactItem","_ref","_ref$contact","contact","id","name","number","dispatch","useDispatch","_jsxs","children","_jsx","type","onClick","deleteContact","Contacts","contacts","useSelector","selectContacts","filter","selectFilter","isLoading","selectIsLoading","error","selectError","useEffect","fetchAll","visibleContacts","toLowerCase","includes","_Fragment","length","map","Label","Input","SearchIIcon","BiSearchAlt","Filter","onChange","e","changeFilter","target","value","placeholder","MainTitle","Title","FormContact"],"sourceRoot":""}